name: publish to pypi

on:
  push:
    branches:
      - '*'
  workflow_dispatch:


jobs:
  windows-build:
    strategy:
      matrix:
        pyver: ['3.8', '3.9', '3.10', '3.11']
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyver }}
      - name: Install python packages
        run: |
          pip install pybind11 wheel
      - uses: Jimver/cuda-toolkit@v0.2.11
        id: cuda-toolkit
        with:
          cuda: '11.8.0'
          use-github-cache: false
      - name: Build wheel
        run: |
          # echo $env:CUDA_PATH
          # mkdir build/wheel
          # python --version > build/wheel/${{ matrix.pyver }}.txt
          mkdir build
          cd build
          ..\builder\windows\generate.ps1
          cmake --build . --config Release -- /m > build.log.txt
          cd ..
          rm build -Force -Recurse
          python setup.py bdist_wheel -d build/wheel
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          path: build/wheel/*
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    environment: 'prod'
    needs:
      - windows-build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Display artifacts
        run: ls artifact/ -lh
      # - name: Set up python3.8
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.8'
      # - name: Upload to pypi
      #   run: |
      #     pip install twine
      #     twine upload artifact/* -u __token__ -p ${{ secrets.pypi_password }}
